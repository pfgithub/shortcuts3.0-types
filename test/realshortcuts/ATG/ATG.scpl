@ShowInShareSheet []
@ShowInWidget false
@Icon videocam
@Color green
GetDictionaryfromInput -> mv:"Get Dictionary from Input"
SetVariable Input
Dictionary {name: "ALL THE GIFs!", GG: "GIF Gallery", version: "8.3", "RH ID": "2277", author: @Silentoplayz, service: RoutineHub} -> mv:Dictionary
SetVariable Shortcut_details
Text "Created by: \(v:Shortcut_details.author)\n\nDiscord - G30#2574\nReddit - u/Silentoplayz\nRoutineHub - @Silentoplayz\n\n[Credits]\n\n——————————————————\n\n• u/matthewr_1987 (He was a huge help to me for getting this shortcut started. He has helped me with this shortcut from the initial release (v1.0) all the way up to v3.0).\n\n• u/gluebyte (Created the shortcut 'GIF of GIFs' which is 'GIF Grid from GIFs' in this Shortcut. A lot of code was edited for it to work in ALL THE GIFs!)\n\n• u/Wet250 (Created the shortcut 'EZGIF Video Tools' & specifically created the 'EZGIF Invert Colors' shortcut for me to be implemented into this shortcut. From his shortcut, I was able to create the whole menu \"Color Effects, Presets, & Filters\" menu!)\n\n• u/joekndy (Creator of the Shortcut ‘Emojif’ which gave me the idea to re-create it in this Shortcut!)\n\n——————————————————\n\n• @lucasnederpires at RoutineHub (Added in GIF & Video trimming option, helped to improve the feedback experience, and helped to test new things! He has also helped to fix bugs!)\n\n• @D3W10 (Helps me with squashing bugs and provided me with example shortcuts that I could use in my shortcut. He has re-written the Feedback option in this shortcut, and helped with GIF Gallery.)\n\n• @Ashortcuts (Helped to improve the shortcut by shortening the amount of actions and improving the speed.)\n\n• @pfg (MAJOR credits go to him. He has helped me with making my shortcut completely function-based in v3.9!)\n\n• @Kindredcashew98 (Helps me to squash bugs.)\n\n——————————————————\n\n• Harley Hicks (Creator of RoutineHub.co)\n\n• Mike Beasley (Creator of UpdateKit & RoutinePub)\n\n• ezgif.com (For the Back-&-Forth & Color Effects, Presets, & Filters Options)\n\n——————————————————\n\nSupport for 2 Shortcut Updaters:\n\n• UpdateKit (@MikeBeas)\n• Swing Updater (@D3W10)" -> mv:Text
SetVariable Credits
CreateFolder path="\(v:Shortcut_details.name)/"
CreateFolder path="Swing Updater/SFU"
Dictionary {Name: v:Shortcut_details.name, Version: v:Shortcut_details.version, "RH ID": v:Shortcut_details."RH ID"} -> mv:Dictionary1
SaveFile askWheretoSave=false destinationPath="Swing Updater/SFU/\(v:Shortcut_details.name)" overwriteIfFileExists=true -> mv:"Save File"
GetVariable v:Input.function
If input=Equals value="WiFi Check"
	GetCurrentIPAddress -> mv:"Get Current IP Address"
	If input="Is Greater Than" number=0
	Otherwise
		ShowAlert title="🚨 Alert 🚨" message="\nThe Internet connection appears to be offline. Please try again later.\n\nYou will now be returned to the main menu." showCancelButton=false
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut"
	End
	ExitShortcut
End -> mv:If
If input=Equals value="Convert to GIF Options"
	List ["Photos to GIF", "Video to GIF", "Live Photo to GIF", "Panoramas to GIF", "Burst Photos to GIF", "More Options…", "⏎ Back"] -> mv:List
	ChoosefromList prompt="𝐂𝐨𝐧𝐯𝐞𝐫𝐭 𝐭𝐨 𝐆𝐈𝐅 𝐎𝐩𝐭𝐢𝐨𝐧𝐬 " -> mv:"Choose from List"
	Dictionary {function: mv:"Choose from List"} -> mv:Dictionary2
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut1"
End -> mv:If1
If input=Equals value="Photos to GIF"
	FindPhotos filter=??error: This parameter is an error: Inversion for filters is not implemented yet?? sortby="Creation Date" order="Latest First" -> mv:"Find Photos"
	Count Items -> mv:Count
	If input=Equals number=0 value=0
		ShowAlert title="🚨 \(mv:If1) 🚨" message="\nNo photos were found in your Photo Gallery.\n\nThe shortcut will now re-run." showCancelButton=false
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut2"
	Otherwise
		Text "Order of images\n———————–\n\nSet the order of images here.\n\nDefault: Select multiple images.\nCustom: Specify the number of images\nand then select them one by one.\n" -> mv:Text1
		ChoosefromMenu prompt=mv:Text1 items=["Default Order", "Custom Order", "⏎ Back"]
		Case WFMenuItemTitle=:raw"Default Order" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			GetVariable mv:"Find Photos"
			ChoosefromList prompt="Select at least two images." selectMultiple=true -> mv:"Choose from List1"
		Case WFMenuItemTitle=:raw"Custom Order" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			Text "Number of images\n————————–\n\nPlease define from how many images your gif should be created.\n\nThen select the images step by step\nin the order in which you want them \nto appear.\n" -> mv:Text2
			AskforInput question=mv:Text2 inputType=Number -> mv:Repetitions
			Repeat mv:Repetitions
				GetVariable mv:"Find Photos"
				ChoosefromList prompt="Select an image (\(v:"Repeat Index") of \(mv:Repetitions)) " selectMultiple=false -> mv:"Choose from List2"
			End -> mv:Repeat
		Case WFMenuItemTitle=:raw"⏎ Back" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			Dictionary {function: "Convert to GIF Options"} -> mv:Dictionary3
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut3"
		End -> mv:"Choose from Menu"
		SetVariable found
		Count Items -> mv:Count1
		If input="Is Less Than" number=2 value=0
			ShowAlert title="🚨 \(mv:If1) 🚨" message="\nPlease select at least 2 photos for this conversion." showCancelButton=false
			Dictionary {function: mv:If1} -> mv:Dictionary4
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut4"
		Otherwise
			GetVariable v:found
			ChoosefromMenu prompt="Would you like to markup your selected images?" items=[Yes, No]
			Case WFMenuItemTitle=:raw"Yes" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				RepeatwithEach
					Markup
				End
			Case WFMenuItemTitle=:raw"No" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			End
			CopytoClipboard localOnly=true
			Dictionary {function: NewFunc} -> mv:Dictionary5
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut5"
		End -> mv:If2
	End -> mv:If3
End -> mv:If4
If input=Equals value="Video to GIF"
	FindPhotos filter=??error: This parameter is an error: Inversion for filters is not implemented yet?? sortby="Last Modified Date" order="Latest First" limit=false -> mv:"Find Photos1"
	Count Items -> mv:Count2
	If input=Equals number=0 value=0
		ShowAlert title="🚨 \(mv:If1) 🚨" message="\nNo Videos were found in your Photo Gallery.\n\nThe shortcut will now re-run." showCancelButton=false
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut6"
	Otherwise
		ShowAlert title="🚨 \(mv:If1) 🚨" message="\nThis will ONLY find Videos and Screen Recordings!\n\nTime-lapses and Slo-mo videos are not supported for this conversion." showCancelButton=false
		GetVariable mv:"Find Photos1"{as: photomedia}
		ChoosefromList prompt="\(v:Shortcut_details.name) - Video to GIF " -> mv:"Choose from List3"
		SetVariable found
		Count Items -> mv:Count3
		If input=Equals value=0
			ShowAlert title="🚨 \(mv:If1) 🚨" message="\nA Video was not chosen.\n\nPlease select a Video this time." showCancelButton=false
			Dictionary {function: mv:If1}
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut7"
		Otherwise
			GetVariable v:found
			CopytoClipboard localOnly=true
			Dictionary {function: NewFunc2} -> mv:Dictionary6
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut8"
		End -> mv:If5
	End -> mv:If6
End -> mv:If7
If input=Equals value="Live Photo to GIF"
	FindPhotos filter=??error: This parameter is an error: Inversion for filters is not implemented yet?? -> mv:"Find Photos2"
	Count Items -> mv:Count4
	If input=Equals value=0
		ShowAlert title="🚨 \(mv:If1) 🚨" message="\nThere were no Live Photos found in your Gallery.\n\nThe shortcut will now re-run." showCancelButton=false
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut9"
	Otherwise
		GetLatestLivePhotos 75 -> mv:"Get Latest Live Photos"
		ChoosefromList prompt="\(v:Shortcut_details.name) - Live Photo to GIF" -> mv:"Choose from List4"
		SetVariable found
		Count Items -> mv:Count5
		If input=Equals value=0
			ShowAlert title="🚨 \(mv:If1) 🚨" message="\nA Live Photo was not chosen.\n\nPlease select a Live Photo this time." showCancelButton=false
			Dictionary {function: mv:If1} -> mv:Dictionary7
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut10"
		Otherwise
			GetVariable v:found
			CopytoClipboard localOnly=true
			Dictionary {function: NewFunc2} -> mv:Dictionary8
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut11"
		End -> mv:If8
	End -> mv:If9
End -> mv:If10
If input=Equals value="Panoramas to GIF"
	FindPhotos filter=??error: This parameter is an error: Inversion for filters is not implemented yet?? sortby="Last Modified Date" order="Latest First" -> mv:"Find Photos3"
	Count Items -> mv:Count6
	If input=Equals value=0
		ShowAlert title="🚨 \(mv:If1) 🚨" message="\nThere were no Panoramas found in your Gallery.\n\nThe shortcut will now re-run." showCancelButton=false
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut12"
	Otherwise
		Text "Order of images\n———————–\n\nSet the order of images here.\n\nDefault: Select multiple images.\nCustom: Specify the number of images\nand then select them one by one.\n" -> mv:Text3
		ChoosefromMenu prompt=mv:Text3 items=["Default Order", "Custom Order", "⏎ Back"]
		Case WFMenuItemTitle=:raw"Default Order" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			GetVariable mv:"Find Photos3"
			ChoosefromList prompt="Select at least two Panoramas." selectMultiple=true -> mv:"Choose from List5"
		Case WFMenuItemTitle=:raw"Custom Order" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			Text "Number of images\n————————–\n\nPlease define from how many images your gif should be created.\n\nThen select the images step by step\nin the order in which you want them \nto appear.\n" -> mv:Text4
			AskforInput question=mv:Text4 inputType=Number -> mv:Repetitions1
			Repeat mv:Repetitions1
				GetVariable mv:"Find Photos3"
				ChoosefromList prompt="Select a Panorama (\(v:"Repeat Index") of \(mv:Repetitions1))" -> mv:"Choose from List6"
			End -> mv:Repeat1
		Case WFMenuItemTitle=:raw"⏎ Back" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			Dictionary {function: "Convert to GIF Options"} -> mv:Dictionary9
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut13"
		End -> mv:"Choose from Menu1"
		SetVariable found
		Count Items -> mv:Count7
		If input="Is Less Than" number=2 value=0
			ShowAlert title="🚨 \(mv:If1) 🚨" message="\nPlease select at least 2 Panoramas for this conversion." showCancelButton=false
			Dictionary {function: mv:If1} -> mv:Dictionary10
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut14"
		Otherwise
			GetVariable v:found
			CopytoClipboard localOnly=true
			Dictionary {function: NewFunc} -> mv:Dictionary11
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut15"
		End -> mv:If11
	End -> mv:If12
End -> mv:If13
If input=Equals value="Burst Photos to GIF"
	FindPhotos filter=??error: This parameter is an error: Inversion for filters is not implemented yet?? sortby="Last Modified Date" order="Latest First" -> mv:"Find Photos4"
	Count Items -> mv:Count8
	If input=Equals number=0 value=0
		ShowAlert title="🚨 \(mv:If1) 🚨" message="\nThere were no Burst Photos found in your Gallery.\n\nThe shortcut will now re-run." showCancelButton=false
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut16"
	Otherwise
		GetVariable mv:"Find Photos4"
		ChoosefromList prompt="\(v:Shortcut_details.name) - Burst Photos to GIF" -> mv:"Choose from List7"
		SetVariable found
		Count Items -> mv:Count9
		If input=Equals value=0
			ShowAlert title="🚨 \(mv:If1) 🚨" message="\nA Burst Photo was not chosen.\n\nPlease select a Burst Photo this time." showCancelButton=false
			Dictionary {function: mv:If1} -> mv:Dictionary12
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut17"
		Otherwise
			GetVariable v:found
			CopytoClipboard localOnly=true
			Dictionary {function: NewFunc2} -> mv:Dictionary13
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut18"
		End -> mv:If14
	End -> mv:If15
End -> mv:If16
If input=Equals value="More Options…"
	List ["GIFs to GIF (Combine GIFs)", "App Store Icons to GIF", "Artist Album Covers to GIF", "Shortcut Icons to GIF", "Emojis to GIF", "Text to GIF", "⏎ Back"] -> mv:List1
	ChoosefromList prompt="More Options…" -> mv:"Choose from List8"
	If input=Equals value="⏎ Back"
		Dictionary {function: "Convert to GIF Options"}
	Otherwise
		Dictionary {function: mv:"Choose from List8"} -> mv:Dictionary14
	End
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut19"
End -> mv:If17
If input=Equals value="GIFs to GIF (Combine GIFs)"
	FindPhotos filter=??error: This parameter is an error: Inversion for filters is not implemented yet?? sortby="Last Modified Date" order="Latest First" -> mv:"Find Photos5"
	Count Items -> mv:Count10
	If input=Equals value=0
		ShowAlert title="🚨 \(mv:If17) 🚨" message="\nThere were no GIFs found in your Gallery.\n\nThe shortcut will now re-run." showCancelButton=false
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut20"
	Otherwise
		Text "Order of images\n———————–\n\nSet the order of images here.\n\nDefault: Select multiple images.\nCustom: Specify the number of images\nand then select them one by one.\n" -> mv:Text5
		ChoosefromMenu prompt=mv:Text5 items=["Default Order", "Custom Order", "⏎ Back"]
		Case WFMenuItemTitle=:raw"Default Order" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			GetVariable mv:"Find Photos5"
			ChoosefromList prompt="Select at least two GIFs to combine." selectMultiple=true -> mv:"Choose from List9"
		Case WFMenuItemTitle=:raw"Custom Order" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			Text "Number of images\n————————–\n\nPlease define from how many images your gif should be created.\n\nThen select the images step by step\nin the order in which you want them \nto appear.\n" -> mv:Text6
			AskforInput question=mv:Text6 inputType=Number -> mv:Repetitions2
			Repeat mv:Repetitions2
				GetVariable mv:"Find Photos5"
				ChoosefromList prompt="Select a GIF (\(v:"Repeat Index") out of \(mv:Repetitions2))" -> mv:"Choose from List10"
			End -> mv:Repeat2
		Case WFMenuItemTitle=:raw"⏎ Back" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			Dictionary {function: "More Options…"} -> mv:Dictionary15
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut21"
		End -> mv:"Choose from Menu2"
		SetVariable found
		Count Items -> mv:Count11
		If input="Is Less Than" number=2 value=0
			ShowAlert title="🚨 \(mv:If17) 🚨" message="\nPlease select at least 2 GIFs for this conversion." showCancelButton=false
			Dictionary {function: mv:If17} -> mv:Dictionary16
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut22"
		Otherwise
			GetVariable v:found
			CopytoClipboard localOnly=true
			Dictionary {function: NewFunc} -> mv:Dictionary17
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut23"
		End
	End
End -> mv:If18
If input=Equals value="App Store Icons to GIF"
	Dictionary {function: "WiFi Check"} -> mv:Dictionary18
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
	AskforInput question="How much app icons do you want?" inputType=Number -> mv:"Ask for Input"
	If input="Is Less Than" number=2
		ShowAlert title="🚨 \(mv:If17) 🚨" message="\nNo App Store Icons were chosen.\n\nPlease select at least two App Store Icons this time." showCancelButton=false
		Dictionary {fucntion: mv:If17} -> mv:Dictionary19
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
	Otherwise
		Repeat mv:"Ask for Input"
			SearchAppStore search=s:askWhenRun searchBy=s:askWhenRun results=s:askWhenRun region=s:askWhenRun WFItemLimit=s:askWhenRun -> mv:"Search App Store"
			ChoosefromList prompt=mv:If17 -> mv:"Choose from List11"
			Text mv:"Choose from List11"{get: artworkurl} -> mv:Text7
			GetContentsofURL -> mv:"Get Contents of URL"
			GetImagesfromInput -> mv:"Get Images from Input"
		End -> mv:Repeat3
		GetVariable mv:Repeat3
		ChoosefromMenu prompt="Would you like to mask the GIF to the shape of an icon?" items=[Yes, No]
		Case WFMenuItemTitle=:raw"Yes" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			MaskImage type=Icon -> mv:"Mask Image"
		Case WFMenuItemTitle=:raw"No" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
		End -> mv:"Choose from Menu3"
		CopytoClipboard localOnly=true
		Dictionary {function: NewFunc} -> mv:Dictionary20
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut24"
	End -> mv:If19
End -> mv:If20
If input=Equals value="Artist Album Covers to GIF"
	Dictionary {function: "WiFi Check"} -> mv:Dictionary21
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut25"
	SearchiTunesStore search=s:askWhenRun searchBy=Artist results=Albums WFItemLimit=50 -> mv:"Search iTunes Store"
	ChoosefromList prompt="Select more than 1 Artist Album Cover." selectMultiple=true -> mv:"Choose from List12"
	SetVariable found
	Count Items -> mv:Count12
	If input="Is Less Than" number=2 value=0
		ShowAlert title="🚨 \(mv:If17) 🚨" message="\nPlease select at least two Artist Album Covers for this conversion." showCancelButton=false
		Dictionary {function: mv:If17} -> mv:Dictionary22
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut26"
	Otherwise
		GetVariable v:found
		GetImagesfromInput
		CopytoClipboard localOnly=true
		Dictionary {function: NewFunc} -> mv:Dictionary23
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut27"
	End
End -> mv:If21
If input=Equals value="Shortcut Icons to GIF"
	AskforInput question="How much shortcut icons do you want?" inputType=Number -> mv:"Ask for Input1"
	If input="Is Less Than" number=2
		ShowAlert title="🚨 \(mv:If17) 🚨" message="\nPlease select at least two Shortcut Icons for this conversion." showCancelButton=false
		Dictionary {function: mv:If17} -> mv:Dictionary24
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
	End -> mv:If22
	Repeat mv:"Ask for Input1"
		GetMyShortcuts -> mv:"Get My Shortcuts"
		ChoosefromList -> mv:"Choose from List13"
		GetImagesfromInput -> mv:"Get Images from Input1"
	End -> mv:Repeat4
	GetVariable mv:Repeat4
	CopytoClipboard localOnly=true
	Dictionary {function: NewFunc} -> mv:Dictionary25
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut28"
End -> mv:If23
If input=Equals value="Emojis to GIF"
	AskforInput question="Enter your emojis in the text field down below to create a GIF." -> mv:"Ask for Input2"
	Count Characters -> mv:Count13
	If input=Equals value=0
		ShowAlert title="🚨 \(mv:If1) 🚨" message="\nNo emojis were entered.\n\nPlease enter emojis this time!" showCancelButton=false
		Dictionary {function: mv:If1}
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
	Otherwise
		GetVariable mv:"Ask for Input2"
		SplitText separator="Every Character" -> mv:"Split Text"
		RepeatwithEach
			SetVariable Letter
			Text "<head>\n<style>\nh1 {\n    font-family: Helvetica;\n    font-weight: 1000;\n    color: transparent;\n    text-shadow: 0 0 0 white;\n}\n</style>\n<body bgcolor=\"000000\">\n<h1>\n\(v:Letter)\n</h1>\n</body>\n</head>" -> mv:Text8
			MakeRichTextfromHTML -> mv:"Make Rich Text from HTML"
			MakePDF includeMargin=false -> mv:"Make PDF"
			GetImagesfromInput -> mv:"Get Images from Input2"
			CropImage position="Top Left" width=165 height=200 -> mv:"Crop Image"
			SetVariable Textmask
			Text "<head>\n<style>\nh1 {\n    font-family: Helvetica;\n    font-weight: 1000;\n}\n</style>\n<body>\n<h1>\n\(v:Letter)\n</h1>\n</body>\n</head>" -> mv:Text9
			MakeRichTextfromHTML -> mv:"Make Rich Text from HTML1"
			MakePDF -> mv:"Make PDF1"
			GetImagesfromInput -> mv:"Get Images from Input3"
			CropImage position="Top Left" width=165 height=200 -> mv:"Crop Image1"
			MaskImage type="Custom Image" imageMask=v:Textmask -> mv:"Mask Image1"
		End -> mv:"Repeat with Each"
		CopytoClipboard localOnly=true
		Dictionary {function: NewFunc} -> mv:Dictionary26
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut29"
	End -> mv:If24
End -> mv:If25
If input=Equals value="Text to GIF"
	AskforInput question="Type some text separated by spaces." -> mv:"Ask for Input3"
	SetVariable "Text to GIF"
	Count Characters -> mv:Count14
	If input=Equals value=0
		ShowAlert title="🚨 \(mv:If23) 🚨" message="\nNo text was entered.\n\nPlease enter some text." showCancelButton=false
		Dictionary {function: mv:If23} -> mv:Dictionary27
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
	Otherwise
		GetVariable v:"Text to GIF"
		MatchText pattern="(\\s?)(\\b\\w+\\S+?)" caseSensitive=false -> mv:"Match Text"
		GetGroupfromMatchedText get="All Groups"
		AddtoVariable "Serial Parser"
		GetVariable v:"Serial Parser"
		RepeatwithEach
			GetVariable v:"Repeat Item"
			Count Characters
			If input="Is Greater Than" number=0 value=" "
				GetVariable v:"Repeat Item"
				SplitText separator="Every Character"
			Otherwise
				GetVariable v:"Repeat Item"
			End
			RepeatwithEach
				AddtoVariable "Letter Synthesizer"
				Count Characters
				If input="Is Greater Than" number=0
					GetVariable v:"Letter Synthesizer"
					CombineText separator=Spaces
					ReplaceText findText="\\s" caseSensitive=false regularExpression=true
				Otherwise
					GetVariable v:"Letter Synthesizer"
				End
				SetVariable "Letter Glues"
				Text "<head>\n<style>\nh1 {\n    font-family: Helvetica;\n    font-weight: 1000;\n}\n</style>\n<body>\n<h1>\n\(v:"Letter Glues")\n</h1>\n</body>\n</head>" -> mv:Text10
				MakeRichTextfromHTML -> mv:"Make Rich Text from HTML2"
				MakePDF -> mv:"Make PDF2"
				GetImagesfromInput -> mv:"Get Images from Input4"
				CropImage position="Top Left" xCoordinate=0 yCoordinate=0 width=1000 height=200 -> mv:"Crop Image2"
			End -> mv:"Repeat with Each1"
			AddtoVariable Frames
			Nothing
			SetVariable "Letter Synthesizer"
			SetVariable "Letter Glues"
		End -> mv:"Repeat with Each2"
	End
	GetVariable v:Frames
	CopytoClipboard localOnly=true
	Dictionary {function: NewFunc}
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
End -> mv:If26
If input=Equals value="Flip GIF"
	GetVariable v:Input
	GetDictionaryValue key="Plug-in" -> mv:"Get Dictionary Value"
	If input=Equals value="GIF Gallery"
		GetClipboard -> mv:"Get Clipboard"
		SetVariable Gif
	Otherwise
		FindPhotos filter=??error: This parameter is an error: Inversion for filters is not implemented yet?? sortby="Last Modified Date" order="Latest First" -> mv:"Find Photos6"
		Count Items -> mv:Count15
		If input=Equals value=0
			ShowAlert title="🚨 \(mv:If23) 🚨" message="\nThere were no GIFs found in your Gallery.\n\nThe shortcut will now re-run." showCancelButton=false
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut30"
		Otherwise
			GetVariable mv:"Find Photos6"
			ChoosefromList prompt="\(v:Shortcut_details.name) - Flip GIF" selectMultiple=false -> mv:"Choose from List14"
			SetVariable Gif
			Count Items -> mv:Count16
			If input=Equals value=0
				ShowAlert title="🚨 \(mv:If23) 🚨" message="\nA GIF was not chosen.\n\nPlease select a GIF this time." showCancelButton=false
				Dictionary {function: mv:If23}
				RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
			End
		End -> mv:If27
	End -> mv:If28
	GetVariable v:Gif
	GetFramesfromImage -> mv:"Get Frames from Image"
	ChoosefromMenu prompt="Select a Flip option." items=["Flip Horizontal (Mirror GIF)", "Flip Vertical (Upside-down GIF)", "Flip both Horizontally & then Vertically"]
	Case WFMenuItemTitle=:raw"Flip Horizontal (Mirror GIF)" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
		FlipImage -> mv:"Flip Image"
	Case WFMenuItemTitle=:raw"Flip Vertical (Upside-down GIF)" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
		FlipImage Vertical
	Case WFMenuItemTitle=:raw"Flip both Horizontally & then Vertically" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
		FlipImage
		FlipImage Vertical -> mv:"Flip Image1"
	End -> mv:"Choose from Menu4"
	CopytoClipboard localOnly=true
	Dictionary {function: NewFunc} -> mv:Dictionary28
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut31"
End -> mv:If29
If input=Equals value="Rotate GIF"
	GetVariable v:Input
	GetDictionaryValue key="Plug-in" -> mv:"Get Dictionary Value1"
	If input=Equals value="GIF Gallery"
		GetClipboard -> mv:"Get Clipboard1"
		SetVariable Gif
	Otherwise
		FindPhotos filter=??error: This parameter is an error: Inversion for filters is not implemented yet?? sortby="Last Modified Date" order="Latest First" -> mv:"Find Photos7"
		Count Items -> mv:Count17
		If input=Equals value=0
			ShowAlert title="🚨 \(mv:If29) 🚨" message="\nThere were no GIFs found in your Gallery.\n\nThe shortcut will now re-run." showCancelButton=false
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut32"
		Otherwise
			GetVariable mv:"Find Photos7"
			ChoosefromList prompt="\(v:Shortcut_details.name) - Rotate GIF" selectMultiple=false -> mv:"Choose from List15"
			SetVariable Gif
			Count Items -> mv:Count18
			If input=Equals value=0
				ShowAlert title="🚨 \(mv:If29) 🚨" message="\nA GIF was not chosen.\n\nPlease select a GIF this time." showCancelButton=false
				Dictionary {function: mv:If1} -> mv:Dictionary29
				RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut33"
			End
		End -> mv:If30
	End -> mv:If31
	GetVariable v:Gif
	GetFramesfromImage -> mv:"Get Frames from Image1"
	ChoosefromMenu prompt="Select a Rotate option." items=["Rotate 90°", "Rotate 270°", "Custom Rotation"]
	Case WFMenuItemTitle=:raw"Rotate 90°" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
		RotateImage 90
	Case WFMenuItemTitle=:raw"Rotate 270°" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
		RotateImage 270
	Case WFMenuItemTitle=:raw"Custom Rotation" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
		RotateImage s:askWhenRun -> mv:"Rotate Image"
	End -> mv:"Choose from Menu5"
	CopytoClipboard localOnly=true
	Dictionary {function: NewFunc} -> mv:Dictionary30
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut34"
End -> mv:If32
If input=Equals value="Reverse GIF"
	GetVariable v:Input
	GetDictionaryValue key="Plug-in" -> mv:"Get Dictionary Value2"
	If input=Equals value="Gif Gallery"
		GetClipboard -> mv:"Get Clipboard2"
		SetVariable "Reversed GIF"
	Otherwise
		Nothing
		SetVariable "Reversed GIF"
		FindPhotos filter=??error: This parameter is an error: Inversion for filters is not implemented yet?? sortby="Time Taken" order="Latest First" -> mv:"Find Photos8"
		Count Items -> mv:Count19
		If input=Equals value=0
			ShowAlert title="🚨 \(mv:If32) 🚨" message="\nThere were no GIFs found in your Gallery.\n\nThe shortcut will now re-run." showCancelButton=false
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut35"
		Otherwise
			GetVariable mv:"Find Photos8"
			ChoosefromList prompt="\(v:Shortcut_details.name) - Reverse GIF" -> mv:"Choose from List16"
			Count Items -> mv:Count20
			If input=Equals value=0
				ShowAlert title="🚨 \(mv:If32) 🚨" message="\nA GIF was not chosen.\n\nPlease select a GIF this time." showCancelButton=false
				Dictionary {function: mv:If32} -> mv:Dictionary31
				RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
			End
		End
	End
	GetVariable mv:"Choose from List16"
	GetFramesfromImage
	SetVariable "Frames of GIF"
	Count v:"Frames of GIF"
	SetVariable "Frames Loop Counter"
	SetVariable "Frames Length"
	GetVariable mv:"Choose from List16"
	GetDetailsofImages "Metadata Dictionary"
	GetDictionaryValue get="All Values" -> mv:"Get Dictionary Value3"
	SplitText separator=Spaces -> mv:"Split Text1"
	GetItemfromList get="Last Item" -> mv:"Get Item from List"
	SplitText separator=Custom custom="\"DelayTime\":" -> mv:"Split Text2"
	GetItemfromList get="Last Item" -> mv:"Get Item from List1"
	SplitText separator=Custom custom="}" -> mv:"Split Text3"
	GetItemfromList -> mv:"Get Item from List2"
	Repeat v:"Frames Length"
		GetVariable v:"Frames of GIF"
		GetItemfromList get="Item At Index" index=v:"Frames Loop Counter" -> mv:"Get Item from List3"
		AddtoVariable "Reversed GIF"
		GetVariable v:"Frames Loop Counter"
		Calculate operation="-" operand=1 -> mv:Calculate
		SetVariable "Frames Loop Counter"
	End -> mv:Repeat5
	GetVariable v:"Reversed GIF"
	MakeGIF secondsPerPhoto=mv:"Get Item from List2" -> mv:"Make GIF"
	SetName name="\(v:Shortcut_details.name) - Reverse GIF" -> mv:"Set Name"
	QuickLook
	CopytoClipboard localOnly=true
	Dictionary {function: "Adjust GIF"} -> mv:Dictionary32
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut36"
End -> mv:If33
If input=Equals value="Forward-&-Back"
	GetVariable v:Input
	GetDictionaryValue key="Plug-in" -> mv:"Get Dictionary Value4"
	If input=Equals value="GIF Gallery"
		GetClipboard -> mv:"Get Clipboard3"
		SetVariable "Forward-&-Back"
	Otherwise
		Nothing
		SetVariable "Forward-&-Back"
		FindPhotos filter=??error: This parameter is an error: Inversion for filters is not implemented yet?? sortby="Time Taken" order="Latest First" -> mv:"Find Photos9"
		Count Items -> mv:Count21
		If input=Equals value=0
			ShowAlert title="🚨 \(mv:If32) 🚨" message="\nThere were no GIFs found in your Gallery.\n\nThe shortcut will now re-run." showCancelButton=false
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut37"
		Otherwise
			GetVariable mv:"Find Photos9"
			ChoosefromList prompt="\(v:Shortcut_details.name)   - Forward-&-Back" -> mv:"Choose from List17"
			SetVariable "Forward-&-Back"
			Count Items -> mv:Count22
			If input=Equals value=0
				ShowAlert title="🚨 \(mv:If32) 🚨" message="\nA GIF was not chosen.\n\nPlease select a GIF this time." showCancelButton=false
				Dictionary {function: mv:If32}
				RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
			End
		End
	End
	GetVariable v:"Forward-&-Back"
	GetFramesfromImage -> mv:"Get Frames from Image2"
	SetVariable "Frames of GIF"
	Count v:"Frames of GIF" -> mv:Count23
	SetVariable "Frames Loop Counter"
	SetVariable "Frames Length"
	GetVariable mv:"Choose from List17"
	GetDetailsofImages "Metadata Dictionary" -> mv:"Get Details of Images"
	GetDictionaryValue get="All Values" key=delay -> mv:"Get Dictionary Value5"
	SplitText separator=Spaces custom=Delay -> mv:"Split Text4"
	GetItemfromList get="Last Item" -> mv:"Get Item from List4"
	SplitText separator=Custom custom="\"DelayTime\":" -> mv:"Split Text5"
	GetItemfromList get="Last Item" -> mv:"Get Item from List5"
	SplitText separator=Custom custom="}" -> mv:"Split Text6"
	GetItemfromList get="First Item" -> mv:"Get Item from List6"
	Repeat v:"Frames Length"
		GetVariable v:"Frames of GIF"
		GetItemfromList get="Item At Index" index=v:"Frames Loop Counter" -> mv:"Get Item from List7"
		AddtoVariable "Forward-&-Back"
		GetVariable v:"Frames Loop Counter"
		Calculate operation="-" operand=1 -> mv:Calculate1
		SetVariable "Frames Loop Counter"
	End -> mv:Repeat6
	GetVariable v:"Forward-&-Back"
	MakeGIF secondsPerPhoto=mv:"Get Item from List6" -> mv:"Make GIF1"
	SetName name="\(v:Shortcut_details.name) - Forward-&-Back" -> mv:"Set Name1"
	QuickLook
	CopytoClipboard localOnly=true
	Dictionary {function: "Adjust GIF"} -> mv:Dictionary33
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut38"
End -> mv:If34
If input=Equals value="𝐂𝐨𝐥𝐨𝐫 𝐄𝐟𝐟𝐞𝐜𝐭𝐬, 𝐏𝐫𝐞𝐬𝐞𝐭𝐬, & 𝐅𝐢𝐥𝐭𝐞𝐫𝐬"
	Dictionary {function: "WiFi Check"} -> mv:Dictionary34
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut39"
	GetVariable v:Input
	If value="GIF Gallery"
		GetClipboard
		SetVariable Gif
	Otherwise
		FindPhotos filter=??error: This parameter is an error: Inversion for filters is not implemented yet?? sortby="Time Taken" order="Latest First" -> mv:"Find Photos10"
		Count Items -> mv:Count24
		If input=Equals value=0
			ShowAlert title="🚨 Alert 🚨" message="\nThere were no GIFs found in your Gallery.\n\nThe shortcut will now re-run." showCancelButton=false
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut40"
		End
		GetVariable mv:"Find Photos10"
		ChoosefromList prompt="\(v:Shortcut_details.name) " -> mv:"Choose from List18"
		SetVariable Gif
		Count Items -> mv:Count25
		If input=Equals value=0
			ShowAlert title="🚨 \(mv:If34) 🚨" message="\nA GIF was not chosen.\n\nPlease select a GIF this time." showCancelButton=false
			Dictionary {function: "𝐂𝐨𝐥𝐨𝐫 𝐄𝐟𝐟𝐞𝐜𝐭𝐬, 𝐏𝐫𝐞𝐬𝐞𝐭𝐬, & 𝐅𝐢𝐥𝐭𝐞𝐫𝐬"}
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
		End -> mv:If35
	End
	GetVariable v:Gif
	GetDetailsofFiles "File Size" -> mv:"Get Details of Files"
	CalculateStatistics Sum -> mv:"Calculate Statistics"
	FormatFileSize format=MB includeUnits=true -> mv:"Format File Size"
	If input="Is Greater Than" number=35
		ShowResult "\nFile Size is too large!\n\nChosen File Size: \(mv:"Format File Size")\nMax File Size Limit: 35 MB\n\nThe function will now re-run."
		Dictionary {function: "𝐂𝐨𝐥𝐨𝐫 𝐄𝐟𝐟𝐞𝐜𝐭𝐬, 𝐏𝐫𝐞𝐬𝐞𝐭𝐬, & 𝐅𝐢𝐥𝐭𝐞𝐫𝐬"}
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
	Otherwise
		URL "https://ezgif.com/effects" -> mv:URL
		GetContentsofURL advanced=true method=POST requestBody=Form formValues={<file> "new-image": v:Gif} -> mv:"Get Contents of URL1"
		MakeHTMLfromRichText -> mv:"Make HTML from Rich Text"
		MatchText pattern="<input type=\"hidden\" value=\"([^\"]*)\" name=\"token\">" -> mv:"Match Text1"
		GetGroupfromMatchedText -> mv:token
		GetVariable mv:"Make HTML from Rich Text"
		MatchText pattern="<input type=\"hidden\" value=\"([^\"]*)\" name=\"file\">" -> mv:"Match Text2"
		GetGroupfromMatchedText -> mv:file
		URL "https://s5.ezgif.com/effects/?ajax=true" -> mv:URL1
		List ["Hue, Saturation, & Lightness 🌇", "Brightness & Contrast 🏙", "Color Presets 🏞", "Filters 🌄"] -> mv:List2
		ChoosefromList prompt="𝐂𝐨𝐥𝐨𝐫 𝐄𝐟𝐟𝐞𝐜𝐭𝐬, 𝐏𝐫𝐞𝐬𝐞𝐭𝐬, & 𝐅𝐢𝐥𝐭𝐞𝐫𝐬 " -> mv:"Choose from List19"
		If input=Equals value="Hue, Saturation, & Lightness 🌇"
			List [Hue, Saturation, Lightness, "⏎ Back"] -> mv:List3
			ChoosefromList prompt="Hue, Saturation, & Lightness" -> mv:"Choose from List20"
			If input=Equals value="⏎ Back"
				Dictionary {function: "𝐂𝐨𝐥𝐨𝐫 𝐄𝐟𝐟𝐞𝐜𝐭𝐬, 𝐏𝐫𝐞𝐬𝐞𝐭𝐬, & 𝐅𝐢𝐥𝐭𝐞𝐫𝐬"}
				RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut41"
			Otherwise
				GetTextfromInput
				ChangeCase lowercase -> mv:"Change Case"
				AskforInput question="Please type in a number between 0 through 200. This will act as a slider for the intensity." inputType=Number -> mv:"Ask for Input4"
				GetVariable mv:URL1
				GetContentsofURL advanced=true method=POST requestBody=Form formValues={file: mv:file, token: mv:token, "\(mv:"Change Case")": mv:"Ask for Input4"} -> mv:"Get Contents of URL2"
			End
		End -> mv:If36
		If input=Equals value="Brightness & Contrast 🏙"
			List [Brightness, Contrast, "⏎ Back"] -> mv:List4
			ChoosefromList prompt="Brightness & Contrast" -> mv:"Choose from List21"
			If input=Equals value="⏎ Back"
				Dictionary {function: "𝐂𝐨𝐥𝐨𝐫 𝐄𝐟𝐟𝐞𝐜𝐭𝐬, 𝐏𝐫𝐞𝐬𝐞𝐭𝐬, & 𝐅𝐢𝐥𝐭𝐞𝐫𝐬"}
				RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut42"
			Otherwise
				GetTextfromInput
				ChangeCase lowercase -> mv:"Change Case1"
				AskforInput question="Please type in a number between -100 through 100. This will act as a slider for the intensity." inputType=Number -> mv:"Ask for Input5"
				GetVariable mv:URL1
				GetContentsofURL advanced=true method=POST requestBody=Form formValues={file: mv:file, token: mv:token, "\(mv:"Change Case1")": mv:"Ask for Input5"} -> mv:"Get Contents of URL3"
			End
		End -> mv:If37
		If input=Equals value="Color Presets 🏞"
			List [Grayscale, Sepia, Monochrome, Negate, Tint, "⏎ Back"] -> mv:List5
			ChoosefromList prompt="Color Presets" -> mv:"Choose from List22"
			If input=Equals value="⏎ Back"
				Dictionary {function: "𝐂𝐨𝐥𝐨𝐫 𝐄𝐟𝐟𝐞𝐜𝐭𝐬, 𝐏𝐫𝐞𝐬𝐞𝐭𝐬, & 𝐅𝐢𝐥𝐭𝐞𝐫𝐬"}
				RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut43"
			Otherwise
				GetTextfromInput
				ChangeCase lowercase -> mv:"Change Case2"
				If input=Equals value=tint
					ShowAlert title="Color:" message="\nIn the next action after this alert, you will be asked if you would like to visit Google's Color Picker to find the perfect Hexadecimal Color Value." showCancelButton=false
					ChoosefromMenu prompt="Would you like to visit Google's built in Hexadecimal Color Picker?" items=[Yes, No]
					Case WFMenuItemTitle=:raw"Yes" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
						URL "https://www.google.com/search?q=color+picker" -> mv:URL2
						OpenURLs
						AskforInput question="Paste your chosen Hexadecimal value here." defaultAnswer="#" -> mv:"Ask for Input6"
						CopytoClipboard localOnly=true
					Case WFMenuItemTitle=:raw"No" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
					End -> mv:"Choose from Menu6"
					ChoosefromMenu prompt="Would you like to choose from a preset of colors?" items=[Yes, No]
					Case WFMenuItemTitle=:raw"Yes" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
						Text "" -> mv:Text11
						Base64Encode mode=Decode -> mv:"Base64 Encode"
						ExtractArchive
						FilterFiles sortby=Name order="A to Z" -> mv:"Filter Files"
						ChoosefromList -> mv:"Choose from List23"
						If value=mv:"Choose from List23"
							GetName -> mv:"Get Name"
							MatchText pattern="#?([0-9a-fA-F]{6}|[0-9a-fA-F]{3})" caseSensitive=false -> mv:"Match Text3"
						End -> mv:If38
						CopytoClipboard localOnly=true
					Case WFMenuItemTitle=:raw"No" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
						AskforInput question="Color:" defaultAnswer="#" -> mv:"Ask for Input7"
						CopytoClipboard localOnly=true
					End -> mv:"Choose from Menu7"
					AskforInput question="Please type in a number from 0 through 100. This will act as a slider for the intensity of the color you have chosen in the action before this one." inputType=Number -> mv:"Ask for Input8"
				End
				GetVariable mv:URL1
				GetContentsofURL advanced=true method=POST requestBody=Form formValues={file: mv:file, token: mv:token, "\(mv:"Change Case2")": on, "tint-color": s:clipboard, "tint-intensity": mv:"Ask for Input8"} -> mv:"Get Contents of URL4"
			End -> mv:If39
		End -> mv:If40
		If input=Equals value="Filters 🌄"
			List [Gothom, Lomo, Nashville, Toaster, "⏎ Back"] -> mv:List6
			ChoosefromList prompt=Filters -> mv:"Choose from List24"
			If input=Equals value="⏎ Back"
				Dictionary {function: "𝐂𝐨𝐥𝐨𝐫 𝐄𝐟𝐟𝐞𝐜𝐭𝐬, 𝐏𝐫𝐞𝐬𝐞𝐭𝐬, & 𝐅𝐢𝐥𝐭𝐞𝐫𝐬"}
				RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut44"
			Otherwise
				GetTextfromInput
				ChangeCase lowercase -> mv:"Change Case3"
				GetVariable mv:URL1
				GetContentsofURL advanced=true method=POST requestBody=Form formValues={file: mv:file, token: mv:token, "\(mv:"Change Case3")": on} -> mv:"Get Contents of URL5"
			End -> mv:If41
		End -> mv:If42
		MakeHTMLfromRichText -> mv:"Make HTML from Rich Text1"
		MatchText pattern="ezgif.com/tmp/([^\"]*)" -> mv:"Match Text4"
		GetGroupfromMatchedText -> mv:"Get Group from Matched Text"
		URL "https://s5.ezgif.com/save/\(mv:"Get Group from Matched Text")" -> mv:URL3
		GetContentsofURL -> mv:"Get Contents of URL6"
		CopytoClipboard localOnly=true
		Dictionary {function: NewFunc}
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
	End
End -> mv:If43
If input=Equals value="GIF Grid from Photos"
	FindPhotos filter=??error: This parameter is an error: Inversion for filters is not implemented yet?? sortby="Time Taken" order="Latest First" -> mv:"Find Photos11"
	Count Items -> mv:Count26
	If input=Equals value=0
		ShowAlert title="🚨 \(mv:If34) 🚨" message="\nThere were no Photos found in your Gallery.\n\nThe shortcut will now re-run." showCancelButton=false
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut45"
	Otherwise
		GetVariable mv:"Find Photos11"
		ChoosefromList prompt="\(v:Shortcut_details.name) - GIF Grid from Photos" selectMultiple=true -> mv:"Choose from List25"
		Count Items -> mv:Count27
		If input="Is Less Than" number=4 value=0
			ShowAlert title="🚨 \(mv:If34) 🚨" message="\nPlease select at least 4 photos minimum for this conversion.\n\nSelect 9 photos maximum for optimal experience." showCancelButton=false
			Dictionary {function: mv:If34}
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
		Otherwise
			GetVariable mv:"Choose from List25"
		End -> mv:If44
		SetVariable Photos
		Repeat 9
			GetVariable v:Photos
			FilterImages sortby=Random limit=false -> mv:"Filter Images"
			CombineImages mode=Grid spacing=0 -> mv:"Combine Images"
		End -> mv:Repeat7
	End -> mv:If45
	CopytoClipboard localOnly=true
	Dictionary {function: NewFunc} -> mv:Dictionary35
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut46"
End -> mv:If46
If input=Equals value="GIF Grid from GIFs"
	Number 0 -> mv:Number
	SetVariable "Offsets List"
	SetVariable Offset
	FindPhotos filter=??error: This parameter is an error: Inversion for filters is not implemented yet?? sortby="Time Taken" order="Latest First" -> mv:"Find Photos12"
	Count Items -> mv:Count28
	If input=Equals value=0
		ShowAlert title="🚨 \(mv:If46) 🚨" message="\nThere were no GIFs found in your Gallery.\n\nThe shortcut will now re-run." showCancelButton=false
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut47"
	Otherwise
		GetVariable mv:"Find Photos12"
		ChoosefromList prompt="\(v:Shortcut_details.name): GIF Grid from GIFs" selectMultiple=true -> mv:"Choose from List26"
		Count Items -> mv:Count29
		If input="Is Less Than" number=2 value=0
			ShowAlert title="🚨 \(mv:If46) 🚨" message="\nPlease select at least 2 GIFs for this conversion." showCancelButton=false
			Dictionary {function: mv:If46} -> mv:Dictionary36
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
		Otherwise
			GetVariable mv:"Choose from List26"
		End
		RepeatwithEach
			GetVariable v:"Repeat Item"
			GetFramesfromImage -> mv:"Get Frames from Image3"
			SetVariable Images
			AddtoVariable "Images List"
			GetVariable v:Images
			Count Items -> mv:Count30
			AddtoVariable "Frames List"
			GetVariable v:Offset
			Calculate operand=mv:Count30 -> mv:Calculate2
			SetVariable Offset
			AddtoVariable "Offsets List"
			GetVariable v:"Repeat Index"
			SetVariable "File Count"
		End -> mv:"Repeat with Each3"
		GetVariable v:"Frames List"
		CalculateStatistics Maximum -> mv:"Calculate Statistics1"
		SetVariable "Max Frames"
		Repeat v:"Max Frames"
			Nothing
			SetVariable "New Images"
			Repeat v:"File Count"
				GetVariable v:"Frames List"
				GetItemfromList get="Item At Index" index=v:"Repeat Index 2" -> mv:"Get Item from List8"
				Calculate operation="×" operand=v:"Repeat Index" -> mv:Calculate3
				Calculate operation="÷" operand=v:"Max Frames" -> mv:Calculate4
				RoundNumber mode="Always Round Up" -> mv:"Round Number"
				GetVariable v:"Offsets List"
				GetItemfromList get="Item At Index" index=v:"Repeat Index 2"
				Calculate operand=mv:"Round Number" -> mv:Calculate5
				GetVariable v:"Images List"
				GetItemfromList get="Item At Index" index=mv:Calculate5 -> mv:"Get Item from List9"
				AddtoVariable "New Images"
			End -> mv:Repeat8
			GetVariable v:"New Images"
			CombineImages mode=Grid -> mv:"Combine Images1"
			AddtoVariable "New GIF Images"
		End -> mv:Repeat9
		GetVariable v:"New GIF Images"
		CopytoClipboard localOnly=true
		Dictionary {function: NewFunc} -> mv:Dictionary37
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut48"
	End
End -> mv:If47
If input=Equals value="GIF Wall from GIFs"
	FindPhotos filter=??error: This parameter is an error: Inversion for filters is not implemented yet?? sortby="Time Taken" order="Latest First" -> mv:"Find Photos13"
	Count Items -> mv:Count31
	If input=Equals value=0
		ShowAlert title="🚨 \(mv:If47) 🚨" message="\nThere were no GIFs found in your Gallery.\n\nThe shortcut will now re-run." showCancelButton=false
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut49"
	Otherwise
		GetVariable mv:"Find Photos13"
		ChoosefromList prompt="\(v:Shortcut_details.name) - GIF Wall from GIFs" selectMultiple=false -> mv:"Choose from List27"
		Count Items -> mv:Count32
		If input=Equals value=0
			ShowAlert title="🚨 \(mv:If47) 🚨" message="\nA GIF was not chosen.\n\nPlease select a GIF this time." showCancelButton=false
			Dictionary {function: mv:If47}
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
		Otherwise
			GetVariable mv:"Choose from List27"
		End -> mv:If48
		GetFramesfromImage
		SetVariable Photos
		Count Items -> mv:Count33
		Repeat mv:Count33
			GetVariable v:Photos
			FilterImages filter=??error: This parameter is an error: Inversion for filters is not implemented yet?? sortby=Random limit=false
			CombineImages mode=Grid spacing=0 -> mv:"Combine Images2"
		End -> mv:Repeat10
		CopytoClipboard localOnly=true
		Dictionary {function: NewFunc}
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
	End -> mv:If49
End -> mv:If50
If input=Equals value="𝐎𝐭𝐡𝐞𝐫 𝐎𝐩𝐭𝐢𝐨𝐧𝐬 & 𝐌𝐨𝐫𝐞"
	List ["Video from GIF (GIF to Video)", "Search Giphy & Share", "Share a GIF from Gallery", "Shoot a GIF", "More Options...", "⏎ Back"] -> mv:List7
	ChoosefromList prompt="𝐎𝐭𝐡𝐞𝐫 𝐎𝐩𝐭𝐢𝐨𝐧𝐬 𝐚𝐧𝐝 𝐌𝐨𝐫𝐞 " -> mv:"Choose from List28"
	Dictionary {function: mv:"Choose from List28"} -> mv:Dictionary38
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
End -> mv:If51
If input=Equals value="Video from GIF (GIF to Video)"
	FindPhotos filter=??error: This parameter is an error: Inversion for filters is not implemented yet?? sortby="Time Taken" order="Latest First" -> mv:"Find Photos14"
	Count Items -> mv:Count34
	If input=Equals value=0
		ShowAlert title="🚨 \(mv:If51) 🚨" message="\nThere were no GIFs found in your Gallery.\n\nThe shortcut will now re-run." showCancelButton=false
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut50"
	Otherwise
		GetVariable mv:"Find Photos14"
		ChoosefromList prompt="\(v:Shortcut_details.name) - Video from GIF (GIF to Video)" -> mv:"Choose from List29"
		Count Items -> mv:Count35
		If input=Equals value=0
			ShowAlert title="🚨 \(mv:If42) 🚨" message="\nA GIF was not chosen.\n\nPlease select a GIF this time." showCancelButton=false
			Dictionary {function: mv:If42}
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
		Otherwise
			GetVariable mv:"Choose from List29"
			MakeVideofromGIF s:askWhenRun -> mv:"Make Video from GIF"
			EncodeMedia speed=Normal metadata=false -> mv:"Encode Media"
			SetName name="\(v:Shortcut_details.name) - Video from GIF" advanced=false dontIncludeFileExtension=false -> mv:"Set Name2"
			QuickLook
			CopytoClipboard localOnly=true
			Text Video -> mv:Text12
			SetVariable Video
			Dictionary {function: "Adjust GIF", Video: v:Video} -> mv:Dictionary39
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
		End
	End -> mv:If52
End -> mv:If53
If input=Equals value="Search Giphy & Share"
	Dictionary {function: "WiFi Check"}
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
	SearchGiphy -> mv:"Search Giphy"
	SetName name="\(v:Shortcut_details.name) - Search Giphy & Share" -> mv:"Set Name3"
	GetImagesfromInput -> mv:"Get Images from Input5"
	CopytoClipboard localOnly=true
	Dictionary {function: NewFunc} -> mv:Dictionary40
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut51"
End -> mv:If54
If input=Equals value="Share a GIF from Gallery"
	FindPhotos filter=??error: This parameter is an error: Inversion for filters is not implemented yet?? sortby="Time Taken" order="Latest First" -> mv:"Find Photos15"
	Count Items -> mv:Count36
	If input=Equals value=0
		ShowAlert title="🚨 \(mv:If54) 🚨" message="\nThere were no GIFs found in your Gallery.\n\nThe shortcut will now re-run." showCancelButton=false
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut52"
	Otherwise
		GetVariable mv:"Find Photos15"{as: photomedia}
		ChoosefromList prompt="\(v:Shortcut_details.name) - Share a GIF from Gallery" selectMultiple=false -> mv:"Choose from List30"
		Count Items -> mv:Count37
		If input=Equals value=0
			ShowAlert title="🚨 \(mv:If54) 🚨" message="\nA GIF was not chosen.\n\nPlease select a GIF this time." showCancelButton=false
			Dictionary {function: mv:If54}
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
		Otherwise
			GetVariable mv:"Choose from List30"{as: photomedia}
			GetFramesfromImage -> mv:"Get Frames from Image4"
			CopytoClipboard localOnly=true
			Dictionary {function: NewFunc} -> mv:Dictionary41
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
		End -> mv:If55
	End -> mv:If56
End -> mv:If57
If input=Equals value="Shoot a GIF"
	AskforInput question="Take how many photos? Each photo is one frame of the Gif." defaultAnswer=4 inputType=Number -> mv:"Ask for Input9"
	TakePhoto WFPhotoCount=mv:"Ask for Input9" -> mv:"Take Photo"
	CopytoClipboard localOnly=true
	Dictionary {function: NewFunc} -> mv:Dictionary42
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
End -> mv:If58
If input=Equals value="More Options..."
	List ["Extract & Save Frames of Video/GIF", "Save GIF from URL", "Side-by-Side GIF Combiner", "⏎ Back"]
	ChoosefromList prompt="More Options..." -> mv:"Choose from List31"
	If input=Equals value="⏎ Back"
		Dictionary {function: "𝐎𝐭𝐡𝐞𝐫 𝐎𝐩𝐭𝐢𝐨𝐧𝐬 & 𝐌𝐨𝐫𝐞"} -> mv:Dictionary43
	Otherwise
		Dictionary {function: mv:"Choose from List31"}
	End
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
Otherwise
End -> mv:If59
If input=Equals value="Extract & Save Frames of Video/GIF"
	SelectPhotos false -> mv:"Select Photos"
	RepeatwithEach
		GetDetailsofImages "Media Type" -> mv:"Get Details of Images1"
		If input=Equals value=Video
			GetVariable v:"Repeat Item"{as: photomedia}
			EncodeMedia -> mv:"Encode Media1"
			MakeGIF secondsPerPhoto=0.2 -> mv:"Make GIF2"
			GetVariable mv:"Make GIF2"
		Otherwise
			GetVariable v:"Repeat Item"{as: photomedia}
		End -> mv:If60
		GetFramesfromImage -> mv:"Get Frames from Image5"
		ChoosefromList prompt="Select frame/s from your chosen GIF or Video to save. " selectMultiple=true -> mv:"Choose from List32"
		ConvertImage quality=1 -> mv:"Convert Image"
		SavetoPhotoAlbum -> mv:"Save to Photo Album"
		ShowNotification title="Frames saved to your photos."
		SetName name="\(v:Shortcut_details.name) - Extract & Save Frames of Video/GIF" -> mv:"Set Name4"
		QuickLook
		ShowAlert title="🚨 Alert 🚨" message="\nThere are no options to share the selected frames within the shortcut due to issues with it. Instead, you can share the frames directly from the Photos Application.\n\nWhen you Press OK, the shortcut will re-run." showCancelButton=false
	End -> mv:"Repeat with Each4"
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut53"
End -> mv:If61
If input=Equals value="Save GIF from URL"
	Dictionary {function: "WiFi Check"}
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
	GetClipboard
	GetURLsfromInput -> mv:"Get URLs from Input"
	If input=Equals value=mv:"Get URLs from Input"
		GetContentsofURL -> mv:"Get Contents of URL7"
		SetName name="\(v:Shortcut_details.name) - Save GIF from URL"
		QuickLook
	Otherwise
		ShowAlert title="🚨 Not an URL. 🚨" message="\nThe content in your clipboard is not an URL.\n\nThe shortcut will now re-run." showCancelButton=false
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut54"
	End -> mv:If62
	CopytoClipboard localOnly=true
	Dictionary {function: NewFunc} -> mv:Dictionary44
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
End -> mv:If63
If input=Equals value="Side-by-Side GIF Combiner"
	SelectPhotos false -> mv:"Select Photos1"
	GetFramesfromImage -> mv:"Get Frames from Image6"
	SetVariable "First Image"
	Count Items -> mv:Count38
	SetVariable "First Count"
	SelectPhotos -> mv:"Select Photos2"
	GetFramesfromImage -> mv:"Get Frames from Image7"
	SetVariable "Last Image"
	Count Items -> mv:Count39
	SetVariable "Last Count"
	Repeat v:"First Count"
		GetVariable v:"First Count"
		Calculate operation="×" operand=v:"Repeat Index" -> mv:Calculate6
		Calculate operation="÷" operand=v:"Last Count" -> mv:Calculate7
		RoundNumber -> mv:"Round Number1"
		If input=Equals value=mv:Calculate7
			GetVariable mv:Calculate6
			AddtoVariable Lcm
		End -> mv:If64
	End -> mv:Repeat11
	GetVariable v:Lcm
	GetItemfromList -> mv:"Get Item from List10"
	SetVariable Lcm
	GetVariable v:Lcm
	Calculate operation="÷" operand=v:"First Count" -> mv:Calculate8
	Repeat mv:Calculate8
		GetVariable v:"First Image"
		AddtoVariable "First All"
	End -> mv:Repeat12
	GetVariable v:Lcm
	Calculate operation="÷" operand=v:"Last Count" -> mv:Calculate9
	Repeat mv:Calculate9
		GetVariable v:"Last Image"
		AddtoVariable "Last All"
	End
	Repeat v:Lcm
		GetVariable v:"First All"
		GetItemfromList get="Item At Index" index=v:"Repeat Index" -> mv:"Get Item from List11"
		AddtoVariable "One Frame"
		GetVariable v:"Last All"
		GetItemfromList get="Item At Index" index=v:"Repeat Index" -> mv:"Get Item from List12"
		AddtoVariable "One Frame"
		GetVariable v:"One Frame"
		CombineImages -> mv:"Combine Images3"
		AddtoVariable Frames
		Nothing
		SetVariable "One Frame"
	End -> mv:Repeat13
	GetVariable v:Frames
	CopytoClipboard localOnly=true
	Dictionary {function: NewFunc} -> mv:Dictionary45
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut55"
End -> mv:If65
If input=Equals value="𝐆𝐈𝐅 𝐆𝐚𝐥𝐥𝐞𝐫𝐲"
	CreateFolder path="\(v:Shortcut_details.name)/\(v:Shortcut_details.GG)"
	GetFile showDocumentPicker=false filePath="\(v:Shortcut_details.name)/\(v:Shortcut_details.GG)/Don't Delete!/Dont-Delete.txt" errorIfNotFound=false -> mv:"Get File"
	Count Items -> mv:Count40
	If input="Is Less Than" number=1
		ShowAlert title="The pre-made GIFs are optional to be installed." message="\n\(v:Shortcut_details.name) wants to download the preset GIFs for \(v:Shortcut_details.GG). Press \"OK\" to continue. In the next menu, you will have the option to download the pre-made GIFs. Press 'Yes' to install them. Otherwise, press 'No' to continue." showCancelButton=false
		ChoosefromMenu prompt="Would you like to install the pre-made GIFs?" items=[Yes, No]
		Case WFMenuItemTitle=:raw"Yes" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			Dictionary {function: "WiFi Check"}
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
			URL "https://gif-library.netlify.com/GIFs.zip" -> mv:URL4
			GetContentsofURL -> mv:"Get Contents of URL8"
			ExtractArchive -> mv:"Extract Archive"
			RepeatwithEach
				SetName name=v:"Repeat Item" -> mv:"Set Name5"
				SaveFile askWheretoSave=false destinationPath="\(v:Shortcut_details.name)/\(v:Shortcut_details.GG)/\(mv:"Set Name5")" overwriteIfFileExists=true -> mv:"Save File1"
			End -> mv:"Repeat with Each5"
			CreateFolder path="\(v:Shortcut_details.name)/\(v:Shortcut_details.GG)/Don't Delete!/"
			Text "DON'T DELETE THIS FILE!" -> mv:Text13
			SaveFile askWheretoSave=false destinationPath="\(v:Shortcut_details.name)/\(v:Shortcut_details.GG)/Don't Delete!/Dont-Delete.txt" overwriteIfFileExists=true -> mv:"Save File2"
			CreateFolder path="\(v:Shortcut_details.name)/\(v:Shortcut_details.GG)/Preference"
			Text "DON'T DELETE THIS FILE!" -> mv:Text14
			SaveFile askWheretoSave=false destinationPath="\(v:Shortcut_details.name)/\(v:Shortcut_details.GG)/Preference/Dont-Delete.txt" overwriteIfFileExists=true -> mv:"Save File3"
			ShowNotification title=v:Shortcut_details.name body="The pre-made GIFs have been installed." playSound=true
		Case WFMenuItemTitle=:raw"No" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			CreateFolder path="\(v:Shortcut_details.name)/\(v:Shortcut_details.GG)/Don't Delete!"
			Text "DON'T DELETE THIS FILE!" -> mv:Text15
			SaveFile askWheretoSave=false destinationPath="\(v:Shortcut_details.name)/\(v:Shortcut_details.GG)/Don't Delete!/Dont-Delete.txt" overwriteIfFileExists=true -> mv:"Save File4"
			Nothing
		End -> mv:"Choose from Menu8"
	End -> mv:If66
	Text "\(v:Shortcut_details.GG)\n———————\n\(s:currentDate)" -> mv:Text16
	ChoosefromMenu prompt=mv:Text16 items=[Continue, "GIF Gallery Clean-up", "⏎ Back"]
	Case WFMenuItemTitle=:raw"Continue" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
		ChoosefromMenu prompt="Would you like to add your own GIFs to the gallery?" items=[Yes, No]
		Case WFMenuItemTitle=:raw"Yes" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			Nothing
			ShowAlert title=v:Shortcut_details.name message="\nThe selected GIFs will be saved in this directory of your iCloud Drive:\n\nShortcuts/\(v:Shortcut_details.name)/\(v:Shortcut_details.GG)\n\nIf you want to remove a selected GIF from the gallery, then navigate to the directory and remove the GIF." showCancelButton=false
			ChoosefromMenu prompt="Select an option:" items=["Add from Photo Gallery", "Add from Giphy", "⏎ Back"]
			Case WFMenuItemTitle=:raw"Add from Photo Gallery" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				FindPhotos filter=??error: This parameter is an error: Inversion for filters is not implemented yet?? -> mv:"Find Photos16"
				Count Items -> mv:Count41
				If input=Equals value=0
					ShowAlert title="🚨 \(v:Shortcut_details.name) 🚨" message="\nThere were no GIFs found in your Photo Gallery.\n\nThe shortcut will now re-run." showCancelButton=false
					RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut56"
				Otherwise
					GetVariable mv:"Find Photos16"
					ChoosefromList prompt=mv:"Find Photos16" selectMultiple=s:askWhenRun -> mv:"Choose from List33"
					Count Items -> mv:Count42
					If input=Equals value=0
						ShowAlert title="🚨 \(v:Shortcut_details.name) 🚨" message="\nNo GIF was chosen.\n\nPlease select a GIF." showCancelButton=false
						RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut57"
					Otherwise
						GetVariable mv:"Choose from List33"
						RepeatwithEach
							SaveFile askWheretoSave=false destinationPath="\(v:Shortcut_details.name)/\(v:Shortcut_details.GG)/\(mv:"Find Photos16"{get: name})" overwriteIfFileExists=true -> mv:"Save File5"
						End -> mv:"Repeat with Each6"
						Dictionary {function: "𝐆𝐈𝐅 𝐆𝐚𝐥𝐥𝐞𝐫𝐲"} -> mv:Dictionary46
						RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
					End
				End -> mv:If67
			Case WFMenuItemTitle=:raw"Add from Giphy" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				Dictionary {function: "WiFi Check"}
				RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
				SearchGiphy showGIFPicker=true selectMultiple=true -> mv:"Search Giphy1"
				GetVariable mv:"Search Giphy1"
				RepeatwithEach
					SaveFile askWheretoSave=false destinationPath="\(v:Shortcut_details.name)/\(v:Shortcut_details.GG)/\(mv:"Search Giphy1")" -> mv:"Save File6"
				End -> mv:"Repeat with Each7"
				Dictionary {function: "𝐆𝐈𝐅 𝐆𝐚𝐥𝐥𝐞𝐫𝐲"} -> mv:Dictionary47
				RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
			Case WFMenuItemTitle=:raw"⏎ Back" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			End -> mv:"Choose from Menu9"
		Case WFMenuItemTitle=:raw"No" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			GetFile showDocumentPicker=false filePath="\(v:Shortcut_details.name)/\(v:Shortcut_details.GG)/Preference/Dont-Delete.txt" errorIfNotFound=false -> mv:"Get File1"
			Count Items -> mv:Count43
			If input=Equals number=1 value=0
				ShowAlert title="🚨 The pre-made GIFs need to be installed in order to use this option. 🚨" message="\nClick 'OK' to install the pre-made GIFs." showCancelButton=false
				Dictionary {function: "WiFi Check"}
				RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
				URL "https://gif-library.netlify.com/GIFs.zip" -> mv:URL5
				GetContentsofURL -> mv:"Get Contents of URL9"
				ExtractArchive -> mv:"Extract Archive1"
				RepeatwithEach
					SetName name=v:"Repeat Item" -> mv:"Set Name6"
					SaveFile askWheretoSave=false destinationPath="\(v:Shortcut_details.name)/\(v:Shortcut_details.GG)/\(mv:"Set Name6")" overwriteIfFileExists=true -> mv:"Save File7"
				End -> mv:"Repeat with Each8"
				CreateFolder path="\(v:Shortcut_details.name)/\(v:Shortcut_details.GG)/Preference/"
				Text "DON'T DELETE THIS FILE!" -> mv:Text17
				SaveFile askWheretoSave=false destinationPath="\(v:Shortcut_details.name)/\(v:Shortcut_details.GG)/Preference/Dont-Delete.txt" overwriteIfFileExists=true -> mv:"Save File8"
				ShowNotification title=v:Shortcut_details.name body="The pre-made GIFs have been installed. Please re-run the shortcut." playSound=true
				ExitShortcut
			End -> mv:If68
		End -> mv:"Choose from Menu10"
		GetFile showDocumentPicker=false filePath="\(v:Shortcut_details.name)/\(v:Shortcut_details.GG)" errorIfNotFound=false -> mv:"Get File2"
		ChoosefromList -> mv:"Choose from List34"
		Count Items -> mv:Count44
		If input=Equals value=0
			ShowAlert title="🚨 \(v:Shortcut_details.name) 🚨" message="\nNo GIF was chosen.\n\nPlease select a GIF." showCancelButton=false
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
		Otherwise
			GetVariable mv:"Choose from List34"
			CopytoClipboard localOnly=true
		End -> mv:If69
		ChoosefromMenu prompt="Would you like to view the GIF before continuing?" items=[Yes, No]
		Case WFMenuItemTitle=:raw"Yes" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			SetName name=v:Shortcut_details.name -> mv:"Set Name7"
			QuickLook
		Case WFMenuItemTitle=:raw"No" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
		End -> mv:"Choose from Menu11"
		ChoosefromMenu prompt="What would you like to do?" items=["𝐂𝐡𝐚𝐧𝐠𝐞 𝐎𝐫𝐢𝐞𝐧𝐭𝐚𝐭𝐢𝐨𝐧 𝐨𝐟 𝐆𝐈𝐅 🔄", "𝐂𝐨𝐥𝐨𝐫 𝐄𝐟𝐟𝐞𝐜𝐭𝐬, 𝐏𝐫𝐞𝐬𝐞𝐭𝐬, & 𝐅𝐢𝐥𝐭𝐞𝐫𝐬 🌅", "𝐓𝐫𝐢𝐦, 𝐀𝐝𝐣𝐮𝐬𝐭 𝐒𝐩𝐞𝐞𝐝, & 𝐒𝐚𝐯𝐞/𝐒𝐡𝐚𝐫𝐞 ✂️"]
		Case WFMenuItemTitle=:raw"𝐂𝐡𝐚𝐧𝐠𝐞 𝐎𝐫𝐢𝐞𝐧𝐭𝐚𝐭𝐢𝐨𝐧 𝐨𝐟 𝐆𝐈𝐅 🔄" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			List ["Flip GIF", "Rotate GIF", "Reverse GIF", "Forward-&-Back"] -> mv:List8
			ChoosefromList prompt="𝐂𝐡𝐚𝐧𝐠𝐞 𝐎𝐫𝐢𝐞𝐧𝐭𝐚𝐭𝐢𝐨𝐧 𝐨𝐟 𝐆𝐈𝐅 🔄" -> mv:"Choose from List35"
			Dictionary {function: mv:"Choose from List35", "Plug-in": "GIF Gallery"} -> mv:Dictionary48
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut58"
			Nothing
		Case WFMenuItemTitle=:raw"𝐂𝐨𝐥𝐨𝐫 𝐄𝐟𝐟𝐞𝐜𝐭𝐬, 𝐏𝐫𝐞𝐬𝐞𝐭𝐬, & 𝐅𝐢𝐥𝐭𝐞𝐫𝐬 🌅" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			Dictionary {function: "𝐂𝐨𝐥𝐨𝐫 𝐄𝐟𝐟𝐞𝐜𝐭𝐬, 𝐏𝐫𝐞𝐬𝐞𝐭𝐬, & 𝐅𝐢𝐥𝐭𝐞𝐫𝐬", "Plug-in": "GIF Gallery"} -> mv:Dictionary49
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut59"
		Case WFMenuItemTitle=:raw"𝐓𝐫𝐢𝐦, 𝐀𝐝𝐣𝐮𝐬𝐭 𝐒𝐩𝐞𝐞𝐝, & 𝐒𝐚𝐯𝐞/𝐒𝐡𝐚𝐫𝐞 ✂️" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			Dictionary {function: "Adjust GIF"} -> mv:Dictionary50
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
		End -> mv:"Choose from Menu12"
		Dictionary {function: NewFunc} -> mv:Dictionary51
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut60"
	Case WFMenuItemTitle=:raw"GIF Gallery Clean-up" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
		CreateFolder path="\(v:Shortcut_details.name)/\(v:Shortcut_details.GG)"
		SetVariable GG_Cleanup
		ChoosefromMenu prompt="Are you sure you would like to delete all files from the \(v:Shortcut_details.GG) folder? If chosen yes, you will be asked to confirm your decision 3 times. Otherwise, press No to return to the main menu." items=[Yes, No]
		Case WFMenuItemTitle=:raw"Yes" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			GetVariable v:GG_Cleanup
			DeleteFiles true
			ShowAlert title="🚨Alert🚨" message="\nThe GIF Gallery folder and its contents have been removed from your files. Please re-run the GIF Gallery option to re-install the pre-made GIFs." showCancelButton=false
		Case WFMenuItemTitle=:raw"No" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
		End
	Case WFMenuItemTitle=:raw"⏎ Back" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
	End
End -> mv:If70
If input=Equals value=NewFunc
	GetClipboard
	GetItemfromList
	GetDetailsofImages Width
	RoundNumber round="Right of Decimal" mode="Always Round Down" -> mv:"Round Number2"
	SetVariable src_width
	Dictionary {size: v:src_width} -> mv:Dictionary52
	SaveFile askWheretoSave=false destinationPath="\(v:Shortcut_details.name)/DoNotDelete.json" overwriteIfFileExists=true -> mv:"Save File9"
	GetClipboard
	MakeGIF secondsPerPhoto=0.2 autoSize=false width=v:src_width -> mv:"Make GIF3"
	CopytoClipboard localOnly=true
	SetName name=v:Shortcut_details.name -> mv:"Set Name8"
	QuickLook
	Dictionary {function: "Adjust GIF"} -> mv:Dictionary53
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
End -> mv:If71
If input=Equals value=NewFunc2
	GetClipboard
	GetItemfromList
	GetDetailsofImages Width
	RoundNumber round="Right of Decimal" mode="Always Round Down" -> mv:"Round Number3"
	SetVariable src_width
	Dictionary {size: v:src_width} -> mv:Dictionary54
	SaveFile askWheretoSave=false destinationPath="\(v:Shortcut_details.name)/DoNotDelete.json" overwriteIfFileExists=true
	GetClipboard
	RepeatwithEach
		MakeGIF secondsPerPhoto=0.2 autoSize=false width=v:src_width -> mv:"Make GIF4"
	End -> mv:"Repeat with Each9"
	CopytoClipboard localOnly=true
	SetName name=v:Shortcut_details.name -> mv:"Set Name9"
	QuickLook
	Dictionary {function: "Adjust GIF"} -> mv:Dictionary55
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
End -> mv:If72
If input=Equals value="Adjust GIF"
	GetVariable v:Input.Video
	SetVariable Video
	ChoosefromMenu prompt=v:Shortcut_details.name items=[Trim, Resize, "Adjust Speed", "Save & Share Options", "Create New"]
	Case WFMenuItemTitle=:raw"Trim" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
		GetVariable v:Video
		If input=Equals value=Video
			GetClipboard -> mv:"Get Clipboard4"
			ChoosefromMenu prompt="Do you want to trim your Video?" items=[Yes, No]
			Case WFMenuItemTitle=:raw"Yes" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				TrimMedia -> mv:"Trim Media"
				SetName name="\(v:Shortcut_details.name) - Trim Media"
				QuickLook
				CopytoClipboard localOnly=true
			Case WFMenuItemTitle=:raw"No" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				Dictionary {function: "Adjust GIF", Video: v:Video} -> mv:Dictionary56
				RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
			End -> mv:"Choose from Menu13"
		Otherwise
			GetClipboard -> mv:"Get Clipboard5"
			ChoosefromMenu prompt="Do you want to trim your GIF?" items=[Yes, No]
			Case WFMenuItemTitle=:raw"Yes" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				MakeVideofromGIF -> mv:"Make Video from GIF1"
				TrimMedia -> mv:"Trim Media1"
				CopytoClipboard localOnly=true
				GetFile showDocumentPicker=false selectMultiple=false filePath="\(v:Shortcut_details.name)/DoNotDelete.json" errorIfNotFound=false -> mv:"Get File3"
				GetDictionaryValue key=size -> mv:"Get Dictionary Value6"
				SetVariable result
				GetClipboard
				MakeGIF secondsPerPhoto=0.2 autoSize=false width=v:result -> mv:"Make GIF5"
				CopytoClipboard localOnly=true
				QuickLook
			Case WFMenuItemTitle=:raw"No" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			End -> mv:"Choose from Menu14"
		End -> mv:If73
	Case WFMenuItemTitle=:raw"Resize" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
		GetVariable v:Video
		If input=Equals value=Video
			ShowAlert title="🚨 GIF to Video (Video from GIF) 🚨" message="\nThis feature is not available for the chosen option." showCancelButton=false
			Dictionary {function: "Adjust GIF", Video: v:Video}
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
		Otherwise
			GetClipboard
			GetItemfromList
			GetDetailsofImages Width
			RoundNumber round="Right of Decimal" mode="Always Round Down" -> mv:"Round Number4"
			SetVariable src_width
			GetVariable v:src_width
			Calculate operation="÷" operand=4 -> mv:Calculate10
			Calculate operation="×" operand=3
			RoundNumber round="Right of Decimal" mode="Always Round Down" -> mv:"Round Number5"
			SetVariable "3/4"
			GetVariable v:src_width
			Calculate operation="÷" operand=2
			RoundNumber round="Right of Decimal" mode="Always Round Down" -> mv:"Round Number6"
			SetVariable "1/2"
			GetVariable v:src_width
			Calculate operation="÷" operand=4
			RoundNumber round="Right of Decimal" mode="Always Round Down" -> mv:"Round Number7"
			SetVariable "1/4"
			ChoosefromMenu items=["Keep Original Size (\(v:src_width)px)", "3/4 (\(v:"3/4")px)", "1/2 (\(v:"1/2")px)", "1/4 (\(v:"1/4")px)", "Custom Size", "⏎ Back"]
			Case WFMenuItemAttributedTitle=:raw{
					"string": "Keep Original Size (￼px)",
					"attachmentsByRange": {
						"{20, 1}": {
							"VariableName": "src_width",
							"Type": "Variable"
						}
					}
				} WFMenuItemTitle=:raw"Keep Original Size (src_widthpx)" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				GetVariable v:src_width
			Case WFMenuItemAttributedTitle=:raw{
					"string": "3/4 (￼px)",
					"attachmentsByRange": {
						"{5, 1}": {
							"VariableName": "3/4",
							"Type": "Variable"
						}
					}
				} WFMenuItemTitle=:raw"3/4 (3/4px)" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				GetVariable v:"3/4"
			Case WFMenuItemAttributedTitle=:raw{
					"string": "1/2 (￼px)",
					"attachmentsByRange": {
						"{5, 1}": {
							"VariableName": "1/2",
							"Type": "Variable"
						}
					}
				} WFMenuItemTitle=:raw"1/2 (1/2px)" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				GetVariable v:"1/2"
			Case WFMenuItemAttributedTitle=:raw{
					"string": "1/4 (￼px)",
					"attachmentsByRange": {
						"{5, 1}": {
							"VariableName": "1/4",
							"Type": "Variable"
						}
					}
				} WFMenuItemTitle=:raw"1/4 (1/4px)" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				GetVariable v:"1/4"
			Case WFMenuItemTitle=:raw"Custom Size" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				AskforInput inputType=Number
				RoundNumber round="Right of Decimal" mode="Always Round Down" -> mv:"Round Number8"
			Case WFMenuItemTitle=:raw"⏎ Back" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				Dictionary {function: "Adjust GIF"} -> mv:Dictionary57
				RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
			End -> mv:"Choose from Menu15"
			SetVariable result
			Dictionary {size: v:result} -> mv:Dictionary58
			SaveFile askWheretoSave=false destinationPath="\(v:Shortcut_details.name)/DoNotDelete.json" overwriteIfFileExists=true
			GetClipboard
			RepeatwithEach
				GetFramesfromImage
				MakeGIF loopForever=true autoSize=false width=v:result -> mv:"Make GIF6"
			End -> mv:"Repeat with Each10"
			SetName name=v:Shortcut_details.name -> mv:"Set Name10"
			QuickLook
			CopytoClipboard localOnly=true
			Dictionary {function: "Adjust GIF"} -> mv:Dictionary59
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
		End
	Case WFMenuItemTitle=:raw"Adjust Speed" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
		GetVariable v:Video
		If input=Equals value=Video
			GetClipboard -> mv:"Get Clipboard6"
			ChoosefromMenu prompt="Select a speed option." items=["Slow down Video by 0.5x", "Speed up Video by 2x", "Custom Speed", "⏎ Back"]
			Case WFMenuItemTitle=:raw"Slow down Video by 0.5x" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				EncodeMedia speed="0.5X"
			Case WFMenuItemTitle=:raw"Speed up Video by 2x" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				EncodeMedia speed="2X"
			Case WFMenuItemTitle=:raw"Custom Speed" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				EncodeMedia speed=Custom customSpeed=s:askWhenRun metadata=false -> mv:"Encode Media2"
			Case WFMenuItemTitle=:raw"⏎ Back" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				Dictionary {function: "Adjust GIF", Video: v:Video} -> mv:Dictionary60
				RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
			End -> mv:"Choose from Menu16"
			CopytoClipboard localOnly=true
			QuickLook
		Otherwise
			Text "Adjust the speed\n————————\n\nPlease enter your custom number of seconds per image.\n\nDefault speed is 0.2, therefore, the image changes every 0.2 seconds. If you aren't happy with the speed of your GIF, select Re-edit in the Save & Share Options menu after applying the selected speed." -> mv:Text18
			AskforInput question=mv:Text18 inputType=Number -> mv:"Ask for Input10"
			SetVariable Seconds
			GetFile showDocumentPicker=false filePath="\(v:Shortcut_details.name)/DoNotDelete.json" errorIfNotFound=false -> mv:"Get File4"
			GetDictionaryValue get=Value key=size
			SetVariable result
			GetClipboard
			RepeatwithEach
				GetFramesfromImage -> mv:"Get Frames from Image8"
				MakeGIF secondsPerPhoto=v:Seconds autoSize=false width=v:result -> mv:"Make GIF7"
			End
			SetName name="\(v:Seconds) seconds"
			QuickLook
			CopytoClipboard localOnly=true
		End
	Case WFMenuItemTitle=:raw"Save & Share Options" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
		List ["Quick Look", "Re-edit", "Save Options", "Share Options"] -> mv:List9
		ChoosefromList prompt="What would you like to do?" -> mv:"Choose from List36"
		If input=Equals value="Quick Look"
			GetClipboard -> mv:"Get Clipboard7"
			SetName name=v:Shortcut_details.name -> mv:"Set Name11"
			QuickLook
			Dictionary {function: "Adjust GIF", Video: v:Video}
		End -> mv:If74
		If input=Equals value="Re-edit"
		End -> mv:If75
		If input=Equals value="Save Options"
			GetClipboard
			ChoosefromMenu prompt="Where would you like to save your GIF? " items=["Save to Photo Gallery", "Save to iCloud Drive", "Save to Dropbox", "Save to GIF Gallery", "⏎ Back"]
			Case WFMenuItemTitle=:raw"Save to Photo Gallery" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				SavetoPhotoAlbum -> mv:"Save to Photo Album1"
				ShowNotification title="Your GIF has been saved to your photo gallery." body="Be sure to share it with your friends and family!"
			Case WFMenuItemTitle=:raw"Save to iCloud Drive" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				SaveFile -> mv:"Save File10"
				ChoosefromMenu prompt="Would you like to get a link to the saved file?" items=[Yes, No]
				Case WFMenuItemTitle=:raw"Yes" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
					GetLinktoFile -> mv:"Get Link to File"
					CopytoClipboard localOnly=true
					ShowNotification title="Your GIF has been saved to your iCloud Drive." body="The link has been copied to your clipboard."
					ExitShortcut
				Case WFMenuItemTitle=:raw"No" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				End
				Dictionary {function: "Adjust GIF", Video: v:Video} -> mv:Dictionary61
				RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
			Case WFMenuItemTitle=:raw"Save to Dropbox" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				SaveFile service=Dropbox -> mv:"Save File11"
				ChoosefromMenu prompt="Would you like to get a link to the saved file?" items=[Yes, No]
				Case WFMenuItemTitle=:raw"Yes" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
					GetLinktoFile -> mv:"Get Link to File1"
					CopytoClipboard localOnly=true
					ShowNotification title="Your GIF has been saved to your Dropbox account." body="The link has been copied to your clipboard."
					ExitShortcut
				Case WFMenuItemTitle=:raw"No" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				End -> mv:"Choose from Menu17"
				Dictionary {function: "Adjust GIF", Video: v:Video}
				RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut61"
			Case WFMenuItemTitle=:raw"Save to GIF Gallery" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				SaveFile askWheretoSave=false destinationPath="\(v:Shortcut_details.name)/\(v:Shortcut_details.GG)" overwriteIfFileExists=false -> mv:"Save File12"
				ShowNotification title="Your GIF has been saved to the GIF Gallery folder." body="Destination Path: /Shortcuts/\(v:Shortcut_details.name)/\(v:Shortcut_details.GG)" playSound=false
			Case WFMenuItemTitle=:raw"⏎ Back" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			End -> mv:"Choose from Menu18"
			Dictionary {function: "Adjust GIF", Video: v:Video}
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut62"
		End -> mv:If76
		If input=Equals value="Share Options"
			GetClipboard
			ChoosefromMenu prompt="Where would you like to share your GIF? " items=["Send as Message", "Share via Share Sheet", "Share to Instagram Story", "Upload to Imgur", "⏎ Back"]
			Case WFMenuItemTitle=:raw"Send as Message" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				SendMessage  // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				ShowNotification title="Your GIF has been sent." playSound=false
			Case WFMenuItemTitle=:raw"Share via Share Sheet" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				Share
				ShowNotification title="Your GIF has been successfully shared." body="Be sure to show this shortcut to your friends and impress them!"
			Case WFMenuItemTitle=:raw"Share to Instagram Story" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				URL "instagram://resume" -> mv:URL6
				OpenURLs
				ShowNotification title="Your GIF has been copied to your clipboard." body="Use Instagram's text tool to paste your GIF into your Instagram story!"
			Case WFMenuItemTitle=:raw"Upload to Imgur" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				Dictionary {function: "WiFi Check"}
				RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
				Text "Are you sure you want to upload your GIF to Imgur?\n\nIf you wish to do so, your Imgur link will be copied to your clipboard.\n\nYour GIF will also be uploaded anonymously to Imgur.\n\nOnce uploaded, you will be redirected to Safari to view your uploaded GIF." -> mv:Text19
				ChoosefromMenu prompt=mv:Text19 items=[Yes, No]
				Case WFMenuItemTitle=:raw"Yes" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
					GetClipboard
					UploadtoImgur directLink=true title=s:askWhenRun description=s:askWhenRun -> mv:"Upload to Imgur"
					ShowNotification title="Your GIF has been successfully uploaded to Imgur." body="\nYou will now be redirected to Safari to view your uploaded GIF on Imgur."
					Wait 2
					OpenURLs
				Case WFMenuItemTitle=:raw"No" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
				End
			Case WFMenuItemTitle=:raw"⏎ Back" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			End -> mv:"Choose from Menu19"
			Dictionary {function: "Adjust GIF", Video: v:Video}
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut63"
		End
	Case WFMenuItemTitle=:raw"Create New" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut64"
	End -> mv:"Choose from Menu20"
	Dictionary {function: "Adjust GIF", Video: v:Video} -> mv:Dictionary62
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
	ExitShortcut
End -> mv:If77
If input=Equals value="𝐒𝐞𝐭𝐭𝐢𝐧𝐠𝐬"
	List ["Send Feedback💡", "View Change-log & Release Notes 📝", "About This Shortcut & Credits 📃", "Check for Updates 📲", "⏎ Back"] -> mv:List10
	ChoosefromList prompt=" 𝐒𝐞𝐭𝐭𝐢𝐧𝐠𝐬 " -> mv:"Choose from List37"
	If input=Equals value=mv:"Choose from List37"
		Dictionary {function: mv:"Choose from List37"} -> mv:Dictionary63
	End
	If input=Equals value=Install
		ExitShortcut
	Otherwise
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut65"
	End
End -> mv:If78
If input=Equals value="Send Feedback💡"
	Dictionary {function: "WiFi Check"}
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
	Dictionary {Name: v:Shortcut_details.name, Version: v:Shortcut_details.version, "IFTTT Trigger": Feedback} -> mv:Dictionary64
	SetVariable Settings
	If input=Equals value="⏎ Back"
		Dictionary {function: "𝐒𝐞𝐭𝐭𝐢𝐧𝐠𝐬"} -> mv:Dictionary65
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
	Otherwise
		List ["Send Feedback", "Submit Bug Report", "Provide Suggestions", "Leave a Kind Word", "⏎ Back"] -> mv:List11
		ChoosefromList -> mv:"Choose from List38"
		SetVariable "Feedback Type"
	End -> mv:If79
	If input=Equals value="⏎ Back"
		Dictionary {function: "𝐒𝐞𝐭𝐭𝐢𝐧𝐠𝐬"} -> mv:Dictionary66
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
	Otherwise
		AskforInput question="What do you want to say?" -> mv:"Ask for Input11"
		SetVariable Message
		Text "VmpKM2VGZ3lWbXBsUlc4d1ZFYzBlRlJ0TlUxUmEyYzBUbFUxY3c9PQ==" -> mv:Text20
		Base64Encode mode=Decode
		Base64Encode mode=Decode
		Base64Encode mode=Decode -> mv:"Base64 Encode1"
		SetVariable Key
		Text "⚠️ 𝗪𝗮𝗿𝗻𝗶𝗻𝗴 ⚠️\n\nBy clicking on \"Yes\", you are allowing \(v:Settings.Name) to access your iOS version and your Device Model (iPhone or iPad). These two things are only needed for improving the Feedback.\n\nDo you allow \(v:Settings.Name) to access it?" -> mv:Text21
		ChoosefromMenu prompt=mv:Text21 items=[Yes, No]
		Case WFMenuItemTitle=:raw"Yes" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			GetDeviceDetails "System Version" -> mv:"Get Device Details"
			SetVariable "iOS Version"
			GetDeviceDetails "Device Model" -> mv:"Get Device Details1"
			SetVariable Model
		Case WFMenuItemTitle=:raw"No" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			ShowAlert title="ℹ️ Information ℹ️" message="\n\(v:Settings.Name) won't have access to your Device Model and iOS version." showCancelButton=false
			Text "Was not provided." -> mv:Text22
			SetVariable "iOS Version"
			SetVariable Model
		End -> mv:"Choose from Menu21"
		ChoosefromMenu prompt="Do you want to give your email to be contacted later?" items=[Yes, No]
		Case WFMenuItemTitle=:raw"Yes" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			AskforInput question="What is your email address?" -> mv:"Ask for Input12"
		Case WFMenuItemTitle=:raw"No" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			Text "Was not provided." -> mv:Text23
		End -> mv:"Choose from Menu22"
		SetVariable Email
		Text "\(v:Shortcut_details.name)\n𝗩𝗲𝗿𝘀𝗶𝗼𝗻: \(v:Settings.Version)\n𝗧𝘆𝗽𝗲: \(v:"Feedback Type")\n𝗶𝗢𝗦 𝘃𝗲𝗿𝘀𝗶𝗼𝗻: \(v:"iOS Version")\n𝗗𝗲𝘃𝗶𝗰𝗲 M𝗼𝗱𝗲𝗹: \(v:Model)\n𝗘𝗺𝗮𝗶𝗹: \(v:Email)\n𝗠𝗲𝘀𝘀𝗮𝗴𝗲: \(v:Message)\n\nDo you want to send your feedback?" -> mv:Text24
		ChoosefromMenu prompt=mv:Text24 items=[Yes, No]
		Case WFMenuItemTitle=:raw"Yes" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
			Text "\(v:Shortcut_details.name) v.\(v:Settings.Version)\n𝗦𝗼𝗺𝗲𝗼𝗻𝗲 𝘄𝗮𝗻𝘁𝘀 𝘁𝗼: \(v:"Feedback Type")\n𝗶𝗢𝗦 𝗩𝗲𝗿𝘀𝗶𝗼𝗻: \(v:"iOS Version")\n𝗗𝗲𝘃𝗶𝗰𝗲 𝗠𝗼𝗱𝗲𝗹: \(v:Model)\n𝗘𝗺𝗮𝗶𝗹: \(v:Email)\n𝗠𝗲𝘀𝘀𝗮𝗴𝗲: \(v:Message)" -> mv:Text25
			URL "https://maker.ifttt.com/trigger/\(v:Settings."IFTTT Trigger")/with/key/\(v:Key)" -> mv:URL7
			GetContentsofURL advanced=true method=POST jSONValues={value1: mv:Text25} -> mv:"Get Contents of URL10"
			ShowAlert title="✅ Done ✅" message="\(v:Settings.Name) successfully submitted your feedback!\n\nThanks for giving a Feedback! 😊" showCancelButton=false
		Case WFMenuItemTitle=:raw"No" // Warning: This action contains some parameters that are not supported. Editing them may cause errors.
		End
		Dictionary {function: "𝐒𝐞𝐭𝐭𝐢𝐧𝐠𝐬"}
		RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
		ExitShortcut
	End
End -> mv:If80
If input=Equals value="View Change-log & Release Notes 📝"
	Dictionary {function: "WiFi Check"}
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
	URL "https://routinehub.co/api/v1/shortcuts/2277/versions/latest"
	GetContentsofURL -> mv:"Get Contents of URL11"
	GetDictionaryValue key=Notes -> mv:Notes
	ShowAlert title="Change-log & Release Notes 📝" message="\nHere's what's new in \(v:Shortcut_details.name) v\(v:Shortcut_details.version):\n\n\(mv:Notes)" showCancelButton=false
	Dictionary {function: "𝐒𝐞𝐭𝐭𝐢𝐧𝐠𝐬"} -> mv:Dictionary67
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
End -> mv:If81
If input=Equals value="About This Shortcut & Credits 📃"
	ShowAlert title="About This Shortcut & Credits 📃" message="\n\(v:Shortcut_details.name) v\(v:Shortcut_details.version)\n\n\(v:Credits)" showCancelButton=false
	Dictionary {function: "𝐒𝐞𝐭𝐭𝐢𝐧𝐠𝐬"}
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false -> mv:"Run Shortcut66"
End
If input=Equals value="Check for Updates 📲"
	Dictionary {function: "WiFi Check"}
	RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
	GetMyShortcuts -> mv:"Get My Shortcuts1"
	If input=Equals value=UpdateKit
		Text UpdateKit
		SetVariable "UpdateKit Name"
		Dictionary {"Shortcut Name": v:Shortcut_details.name, "Current Version": v:Shortcut_details.version, "RoutineHub ID": v:Shortcut_details.ID} -> mv:Dictionary68
		ShowNotification title="\(mv:Dictionary68."Shortcut Name") v\(mv:Dictionary68."Current Version")" body="Checking for Updates…" playSound=false
		GetDictionaryfromInput
		SetVariable "Update Dictionaries"
		RunShortcut shortcut=v:"UpdateKit Name" showWhileRunning=false
		GetDictionaryValue key="Exit Mode"
		If input=Contains value="Up To Date"
			ShowAlert title="There are no available updates for \(v:"Update Dictionaries"."Shortcut Name")" message="\nCurrent Version: \(v:"Update Dictionaries"."Current Version")\n\nYou are using the latest version of \(v:"Update Dictionaries"."Shortcut Name") There are no new updates to be installed. Check back later though!" showCancelButton=false
			RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false
			ExitShortcut
		End
		Text Install
		ExitShortcut
	Otherwise
		ShowAlert title="UpdateKit is not Installed!" message="\nPress OK to install UpdateKit."
		URL "https://www.mikebeas.com/updatekit/"
		OpenURLs
		Text Install
		ExitShortcut
	End -> mv:If82
End
Dictionary {Icons: {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": ""}} -> mv:Icons
GetDictionaryValue get="All Values" key=Icons -> mv:Icons1
Text "BEGIN:VCARD\nN;CHARSET=utf-8:𝐂𝐨𝐧𝐯𝐞𝐫𝐭 𝐭𝐨 𝐆𝐈𝐅 𝐎𝐩𝐭𝐢𝐨𝐧𝐬;;;;\nPHOTO;ENCODING=b:\(mv:Icons1.1)\nEND:VCARD\n\nBEGIN:VCARD\nN;CHARSET=utf-8:𝐂𝐡𝐚𝐧𝐠𝐞 𝐎𝐫𝐢𝐞𝐧𝐭𝐚𝐭𝐢𝐨𝐧 𝐨𝐟 𝐆𝐈𝐅;;;;\nPHOTO;ENCODING=b:\(mv:Icons1.2)\nEND:VCARD\n\nBEGIN:VCARD\nN;CHARSET=utf-8:𝐂𝐨𝐥𝐨𝐫 𝐄𝐟𝐟𝐞𝐜𝐭𝐬, 𝐏𝐫𝐞𝐬𝐞𝐭𝐬, & 𝐅𝐢𝐥𝐭𝐞𝐫𝐬;;;;\nPHOTO;ENCODING=b:\(mv:Icons1.3)\nEND:VCARD\n\nBEGIN:VCARD\nN;CHARSET=utf-8:𝐆𝐈𝐅 𝐆𝐫𝐢𝐝 & 𝐖𝐚𝐥𝐥 𝐎𝐩𝐭𝐢𝐨𝐧𝐬;;;;\nPHOTO;ENCODING=b:\(mv:Icons1.4)\nEND:VCARD\n\nBEGIN:VCARD\nN;CHARSET=utf-8:𝐎𝐭𝐡𝐞𝐫 𝐎𝐩𝐭𝐢𝐨𝐧𝐬 & 𝐌𝐨𝐫𝐞;;;;\nPHOTO;ENCODING=b:\(mv:Icons1.5)\nEND:VCARD\n\nBEGIN:VCARD\nN;CHARSET=utf-8:𝐆𝐈𝐅 𝐆𝐚𝐥𝐥𝐞𝐫𝐲;;;\nPHOTO;ENCODING=b:\(mv:Icons1.6)\nEND:VCARD\n\nBEGIN:VCARD\nN;CHARSET=utf-8:𝐒𝐞𝐭𝐭𝐢𝐧𝐠𝐬;;;;\nPHOTO;ENCODING=b:\(mv:Icons1.7)\nEND:VCARD" -> mv:Text26
SetName name="ALL_THE_GIFs.vcf" advanced=false -> mv:"Main Menu"
Text "\(v:Shortcut_details.name) v\(v:Shortcut_details.version)\n———————\n\(s:currentDate)          \(s:currentDate)" -> mv:Text27
GetVariable mv:"Main Menu"{as: contact}
ChoosefromList prompt=mv:Text27 -> mv:"Choose from List39"
If input=Equals value="𝐂𝐨𝐧𝐯𝐞𝐫𝐭 𝐭𝐨 𝐆𝐈𝐅 𝐎𝐩𝐭𝐢𝐨𝐧𝐬"
	Dictionary {function: "Convert to GIF Options"}
End -> mv:If83
If input=Equals value="𝐂𝐡𝐚𝐧𝐠𝐞 𝐎𝐫𝐢𝐞𝐧𝐭𝐚𝐭𝐢𝐨𝐧 𝐨𝐟 𝐆𝐈𝐅"
	List ["Flip GIF", "Rotate GIF", "Reverse GIF", "Forward-&-Back", "⏎ Back"]
	ChoosefromList prompt="𝐂𝐡𝐚𝐧𝐠𝐞 𝐎𝐫𝐢𝐞𝐧𝐭𝐚𝐭𝐢𝐨𝐧 𝐨𝐟 𝐆𝐈𝐅" -> mv:"Choose from List40"
	Dictionary {function: mv:"Choose from List40"}
End -> mv:If84
If input=Equals value="𝐂𝐨𝐥𝐨𝐫 𝐄𝐟𝐟𝐞𝐜𝐭𝐬, 𝐏𝐫𝐞𝐬𝐞𝐭𝐬, & 𝐅𝐢𝐥𝐭𝐞𝐫𝐬"
	Dictionary {function: mv:If84}
End -> mv:If85
If input=Equals value="𝐆𝐈𝐅 𝐆𝐫𝐢𝐝 & 𝐖𝐚𝐥𝐥 𝐎𝐩𝐭𝐢𝐨𝐧𝐬"
	List ["GIF Grid from Photos", "GIF Grid from GIFs", "GIF Wall from GIFs", "⏎ Back"]
	ChoosefromList prompt="𝐆𝐈𝐅 𝐆𝐫𝐢𝐝 & 𝐖𝐚𝐥𝐥 𝐎𝐩𝐭𝐢𝐨𝐧𝐬" -> mv:"Choose from List41"
	Dictionary {function: mv:"Choose from List41"}
End -> mv:If86
If input=Equals value="𝐎𝐭𝐡𝐞𝐫 𝐎𝐩𝐭𝐢𝐨𝐧𝐬 & 𝐌𝐨𝐫𝐞"
	Dictionary {function: mv:If85}
End -> mv:If87
If input=Equals value="𝐆𝐈𝐅 𝐆𝐚𝐥𝐥𝐞𝐫𝐲"
	Dictionary {function: mv:If87}
End -> mv:If88
If input=Equals value="𝐒𝐞𝐭𝐭𝐢𝐧𝐠𝐬"
	Dictionary {function: mv:If88}
End
If input=Equals value=Install
	ExitShortcut
End
RunShortcut shortcut=v:Shortcut_details.name showWhileRunning=false